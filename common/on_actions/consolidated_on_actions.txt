
on_startup = {
	#Apparently, the below vanilla code below must be included in the on_startup of any mod added on_action file, else problems arise with CoC content.... absolutely bizarre, but what can one do? Better safe than sorry.
	events = {
		muslim_school_events.20 #Pick School
	}
	if = {
		limit = {
			has_dlc = "Cradle of Civilization"
			has_country_modifier = tur_janissary
		}
		remove_country_modifier = tur_janissary
	}
	initialize_schools_effect = yes #This is only used here but is used for readability of on_action file.
	#IR	
	set_hre_religion_treaty = no
	#hre_inheritable = yes
	#Apparently, the above vanilla code above must be included in the on_startup of any mod added on_action file, else problems arise with CoC content.... absolutely bizarre, but what can one do? Better safe than sorry.
	#BR - from integrate_byz_events.3
	set_global_flag = integrated_byz_events_used
	BYZ = { set_country_flag = rebellious_demetrios_flag }
	#New for better addon support
	if = {
		limit = { NOT = { has_global_flag = beyond_typus_mod_enabled } }
		set_global_flag = beyond_typus_mod_enabled
	}
	if = {
		limit = { started_in = 1459.1.1 }
		set_global_flag = constantinople_restored
		TUR = { set_country_flag = relocated_capital_constantinople }
	}	#Preventing exploits relating to Contaninople's growth.
	if = {
		limit = {
			started_in = 1495.1.1
			NOT = { started_in = 1648.1.1 }
		}
		clr_global_flag = italy_out_of_HRE
	}	#BT calls the Peace of Westphalia then end of the Italian HRE, not 1495, so delaying the global flag here without having to mess with the HAB history file for now.
}

# country 
on_new_monarch = {
	#Apparently, the below vanilla code below must be included in any mod, else problems arise.... absolutely bizarre, but what can one do?
	crimean_succession_effect = yes #Scripted effect
	slesvig_question_effect = yes #Scripted effect
	if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = domain_of_spouses_family
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = home_of_consort
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	if = {
		limit = {
			NOT = { has_dlc = "Mandate of Heaven" }
			has_country_modifier = the_mandate_of_heaven
			NOT = { legitimacy = 80 }
		}
		country_event = { id = china_events.32 }	# History of last ruler 
	}
	ambrosian_republic_effect = yes
	succession_culture_religion_effect = yes
	sheik_ul_islam_effect = yes
	events = {
		tribal_succession.1		# Harsh anti-tribals.
		9492 					# Remove some event modifiers
		flavor_boh.8			# Winter King in Prague
		flavor_kol.1			# Bavarian Archbishop
		war_of_the_roses.101	# WotR - House of Lancaster wins
		war_of_the_roses.102	# WotR - House of York wins
		war_of_the_roses.106	# WotR - Another dynasty has seized the throne
		flavor_tur.102			# Janissary Reward
		flavor_ori.7			# Hamvira Victorious
		flavor_kbo.1			# The two branches of the Sayfawa dynasty
		flavor_kbo.8			# Sayfawa pretenders
		flavor_zan.5			# Coup of Coup of Suleiman and Muhammad al-Mazlum.
		purple_phoenix.1		# BYZ pretenders
		flavor_pol.3480			# The Pacta Conventa
		protestantism_events.15	# Catholic Leaning Monarch
		tengri_events.17		# Keep the Khojas in Power?
		flavor_tus.15			# Savonarola Dies
		flavor_brapru.22		# Succession of Albrecht Achilles
		flavor_brapru.25		# Dispositio Achillea (can also trigger from flavor_brapru.22)
		flavor_nor.27			# Proclamation in Hamar
		china_events.43			# Picking new Capital for China
		celestial_empire_events.3 #Resistance to Sinicization
		flavor_boh.2			#Heretic Kings
		flavor_hun.17			#Maintaining the Black Army
		flavor_tim.1			#Death of Shah Rukh
		muslim_school_events.20 #No Religious School
		flavor_daimyo.4			#Shiba Yoshikado
	}
	random_events = { 
		1000 = 0
		100 = flavor_kol.1		# Bavarian Archbishop
		100 = flavor_hsa.3		# Hansa: Tagfahrt
		100 = inti_events.1		# Birth of a Panaca
		50 = dynastic_events.4	
		50 = dynastic_events.5	
		25 = harem_events.7		#Failed Policy of Fratricide
	}
	#Apparently, the above vanilla code below must be included in any mod, else problems arise.... absolutely bizarre, but what can one do?
	if = {
		limit = {
			has_reform = high_kingship
			NOT = { has_country_flag = bt_abolition_of_tanistry_succession }
		}
		set_country_flag = bt_tanistry_king_just_died
		clr_country_flag = bt_tanistry_high_queen_reigning
		remove_country_modifier = bt_uncertainty_about_a_high_queen
		country_event = { id = BeyondTypusCelticFlavour.1 days = 1 }				#New Tanist election
		country_event = { id = BeyondTypusCelticFlavour.6 days = 1 }			#High Queen comes to power, will only fire for female rulers
	}
}

# country
on_monarch_death = {
	#Apparently, the below vanilla code below must be included in any mod, else problems arise.... absolutely bizarre, but what can one do?
	if = {
		limit = {
			tag = ANS
			BRA = {
				has_country_flag = albrecht_achilles_flag
			}
		}
		BRA = {
			clr_country_flag = albrecht_achilles_flag #Just to be sure
			kill_heir = yes #If Albrecht Achilles dies in Ansbach he will also be dead in Brandenburg, will appear as normal death of heir to BRA.
		}
	}
	if = {
		limit = { has_country_modifier = sought_after_bachelor }
		remove_country_modifier = sought_after_bachelor
	}
	events = {
		flavor_tus.16 #Savanorola Leaves This World
		flavor_wal.1 # Vlad the Impaler. So that he doesn't try to usurp his father.
		flavor_nav.4 # Navarra succession event
		#IR
		#IR_flavor_SPA.1 # Juan Castile passing
	}
	#Apparently, the above vanilla code below must be included in any mod, else problems arise.... absolutely bizarre, but what can one do?
	if = {
		limit = {
			has_reform = high_kingship
			NOT = { has_country_flag = bt_abolition_of_tanistry_succession }
		}
		set_country_flag = bt_tanistry_king_just_died
		clr_country_flag = bt_tanistry_high_queen_reigning
		remove_country_modifier = bt_uncertainty_about_a_high_queen
		remove_country_modifier = bt_tanistry_underaged_heir
		remove_country_modifier = bt_tanistry_female_heir
		remove_country_modifier = bt_tanistry_waiting_on_heir
	}
}

# country
on_heir_death = {
	#Apparently, the below vanilla code below must be included in any mod, else problems arise.... absolutely bizarre, but what can one do?
	if = {
		limit = { has_country_flag = heir_dip_education }
		clr_country_flag = heir_dip_education
	}
	if = {
		limit = { has_country_flag = heir_mil_education }
		clr_country_flag = heir_mil_education
	}
	if = {
		limit = { has_country_flag = heir_adm_education }
		clr_country_flag = heir_adm_education
	}
	if = {
		limit = { has_ruler_flag = well_advised_tutored_heir }
		clr_ruler_flag = well_advised_tutored_heir
	}
	if = {
		limit = { has_ruler_flag = heir_went_on_grand_tour }
		clr_ruler_flag = heir_went_on_grand_tour
	}
	if = {
		limit = { has_country_flag = albrecht_achilles_flag }
		clr_country_flag = albrecht_achilles_flag #Death of original Albrecht Achilles
	}
	if = {
		limit = { has_ruler_flag = sancaga_cikma }
		clr_ruler_flag = sancaga_cikma
		every_owned_province = {
			limit = {
				has_province_modifier = heir_in_training
			}
			remove_province_modifier = heir_in_training
		}
	}
	if = {
		limit = { has_ruler_flag = returned_from_sancaga_sikma_province }
		clr_ruler_flag = returned_from_sancaga_sikma_province
	}
	#Apparently, the above vanilla code below must be included in any mod, else problems arise.... absolutely bizarre, but what can one do?
	if = {
		limit = {
			has_reform = high_kingship
			NOT = { has_country_flag = bt_abolition_of_tanistry_succession }
		}
		remove_country_modifier = bt_tanistry_underaged_heir
		remove_country_modifier = bt_tanistry_female_heir
		country_event = { id = BeyondTypusCelticFlavour.8 days = 1 }			#Tanist dies, new tanist event
	}
}

#Doesn't work for unknown reasons, so #ing it out for now.
#on_new_heir = {
#	if = {
#		limit = {
#			has_reform = high_kingship
#			has_country_modifier = bt_tanistry_waiting_on_heir
#			NOT = { has_country_flag = bt_abolition_of_tanistry_succession }
#		}
#		country_event = { id = BeyondTypusCelticFlavour.2 days = 1 }			#Male heir born/introduced			- doesn't seem to work, I'll look into this later, added a 1 day MTTH in the meantime
#		country_event = { id = BeyondTypusCelticFlavour.3 days = 1 }			#Female heir born/introduced			- doesn't seem to work, I'll look into this later, added a 1 day MTTH in the meantime
#	}
#}

#IR
# root = losing country, from = location
on_siege_lost_country = {
	
}
on_siege_won_province = {
	events = {
		#IR
		IR_seize.1
		IR_seize.2
		IR_seize.3
		IR_seize.4
		IR_seize.5
		IR_seize.6
		IR_seize.7
		IR_seize.8
		IR_seize.9
		IR_seize.10
		#
		synthetic_dawn.4
	}
}

# FROM = Previous Country, ROOT = Province
on_company_chartered = {
	if = {
		limit = {
			OR = {
				region = bengal_region
				region = hindusthan_region
				region = west_india_region
				region = deccan_region
				region = coromandel_region
			}
		}
		ROOT = {
			owner = {
				set_country_flag = the_coin_is_stronger_than_the_sword
			}
		}
	}
}

# ROOT = Overlord, FROM = Minor #IR- Jupiter added
on_dependency_gained = {
	FROM = {
		if = {
			limit = {
				is_subject_of_type = personal_union
			}
			every_subject_country = {
				limit = {
					is_subject_of_type = personal_union
				}
				ROOT = {
					create_subject = {
						subject_type = personal_union
						subject = PREV
					}
				}
			}
		}
	}
	
	events = {
		dutch_republic.31 # States General falls under a PU
	}
}

# ROOT = Overlord, FROM = Minor
on_dependency_lost = {

}

# ROOT = New vassal, FROM = Overlord
on_create_vassal = {
	if = {
		limit = {
			tag = PAP
		}
		change_government = theocracy
		add_government_reform = papacy_reform
		adopt_reform_progress = FROM
	}
}

# ROOT = Country establishing it
# First province in state is set
on_holy_order_established = {

}

# When a minority is expelled to a colony
# THIS = Colony, ROOT = Colony, FROM = Home province
on_minority_expelled = {

}

# THIS = Raiding country, FROM = Sea province
on_raid_coast = {
	if = {
		limit = {
			has_faction = pr_buccaneers
		}
		add_faction_influence = {
			faction = pr_buccaneers
			influence = 1
		}
	}
}

# ROOT = Tag that captured the flagship, FROM = Tag that lost the flagship
on_flagship_captured = {
	FROM = {
		set_country_flag = captured_flagship_country_flag
	}
	ROOT = {
		country_event = { id = flagship_events.2 }
		set_country_flag = trophy_hunter_flag
	}
	FROM = {
		country_event = { id = flagship_events.1 }
	}
}

# ROOT = Tag that destroyed the flagship, FROM = Tag that lost the flagship
on_flagship_destroyed = {
	FROM = {
		set_country_flag = sunk_flagship_country_flag
	}
	ROOT = {
		country_event = { id = flagship_events.4 }
	}
	FROM = {
		country_event = { id = flagship_events.3 }
	}
}

# this = Released country, FROM = Releasing country
on_country_released = {
	if = {
		limit = {
			tag = PAP
		}
		change_government = theocracy
		add_government_reform = papacy_reform
		adopt_reform_progress = FROM
	}
}