namespace = IR_development

#Population growth
province_event = { 
	id = IR_development.1
	title = "IR_development.1.t"
	desc = "IR_development.1.d"
	picture = BATTLE_eventPicture
	
	trigger = {
		#always = no
		province_id = 1
		has_global_flag = IR_dev_cap_init
	}
	
	is_triggered_only = yes
	hidden = yes

	option = {
		name = "setup.exit" 
		ai_chance = { factor = 100 }
	#	add_base_manpower = 1
		hidden_effect = {
			every_province = {
				limit = { is_city = yes }
				if = {
					limit = {
						has_terrain = farmlands
					}
					set_variable = {
						which = IR_food
						value = 10
					}
				}
				else_if = {
					limit = {
						has_terrain = grasslands
					}
					set_variable = {
						which = IR_food
						value = 8
					}
				}
				else_if = {
					limit = {
						OR = {
							has_terrain = drylands
							has_terrain = woods
							has_terrain = jungle
						}
					}
					set_variable = {
						which = IR_food
						value = 6
					}
				}
				else_if = {
					limit = {
						OR = {
							has_terrain = marsh
							has_terrain = steppe
							has_terrain = hills
						}
					}
					set_variable = {
						which = IR_food
						value = 5
					}
				}
				else_if = {
					limit = {
						OR = {
							has_terrain = highlands
							has_terrain = coastline
						}
					}
					set_variable = {
						which = IR_food
						value = 4
					}
				}
				else_if = {
					limit = {
						OR = {
							has_terrain = savannah
							has_terrain = mountain
							has_terrain = forest
						}
					}
					set_variable = {
						which = IR_food
						value = 3
					}
				}
				else_if = {
					limit = {
						OR = {
							has_terrain = coastal_desert
							has_terrain = badlands
							has_terrain = tundra
						}
					}
					set_variable = {
						which = IR_food
						value = 2
					}
				}
				else_if = {
					limit = {
						OR = {
							has_terrain = desert
							has_terrain = glacier
						}
					}
					set_variable = {
						which = IR_food
						value = 1
					}
				}
				set_variable = {
					which = IR_production
					value = 1
				}
				set_variable = {
					which = IR_consumption
					value = 1
				}
				set_variable = {
					which = IR_consumption_modifier
					value = 1
				}
				set_variable = {
					which = IR_prov_wealth
					value = 1
				}
				set_variable = {
					which = IR_prov_infrastructure
					value = 1
				}
				set_variable = {
					which = IR_prov_infrastructure_cap
					value = 5
				}
				set_variable = {
					which = IR_prov_pop
					value = 1
				}
				set_variable = {
					which = IR_prov_pop_cap
					value = 1
				}
				#IR_growth_modifier
				export_to_variable = {
					variable_name = IR_production
					value = trigger_value:base_production
				}
				change_variable = { 
					which = IR_production
					which = IR_food
				}
				change_variable = {
					which = IR_production 
					value = trigger_value:province_trade_power 
				}
				#consumption
				export_to_variable = {
					variable_name = IR_consumption_modifier
					value = modifier:local_development_cost
				}
				export_to_variable = {
					variable_name = IR_consumption
					value = trigger_value:base_manpower
				}
				change_variable = {
					which = IR_consumption_modifier
					value = 1
				}
				multiply_variable = {
					which = IR_consumption
					which = IR_consumption_modifier
				}
				#infrastructure cap
				if = {
					limit = { has_building = town }
					change_variable = {
						which = IR_prov_infrastructure_cap 
						value = 5
					}
				}
				else_if = {
					limit = { has_building = city }
					change_variable = {
						which = IR_prov_infrastructure_cap 
						value = 15
					}
				}
				else_if = {
					limit = { has_building = metropolis }
					change_variable = {
						which = IR_prov_infrastructure_cap 
						value = 35
					}
				}
				if = {
					limit = { has_building = road }
					change_variable = {
						which = IR_prov_infrastructure_cap 
						value = 5
					}
				}
				else_if = {
					limit = { has_building = railroad }
					change_variable = {
						which = IR_prov_infrastructure_cap 
						value = 10
					}
				}
				#Export to pop cap 
				export_to_variable = {
					variable_name = IR_prov_wealth
					value = trigger_value:base_tax
				}
				export_to_variable = {
					variable_name = IR_prov_infrastructure
					value = trigger_value:base_production
				}
				export_to_variable = {
					variable_name = IR_prov_pop
					value = trigger_value:base_manpower
				}
				#ADD WEALTH AND INFRASTRUCTURE TO GET CARRYING CAPACITY
				change_variable = {
					which = IR_prov_pop_cap
					which = IR_prov_wealth
				}
				change_variable = {
					which = IR_prov_pop_cap
					which = IR_prov_infrastructure
				}
				subtract_variable = {
					which = IR_prov_pop_cap
					value = 2.002
				}
				if = { 
					limit = {
						NOT = { check_variable = { which = IR_prov_pop_cap value = 1 } }
					}
					set_variable = {
						which = IR_prov_pop_cap
						value = 1
					}
				}
				change_variable = {
					which = IR_pop_progress
					which = IR_production
				}
				subtract_variable = {
					which = IR_pop_progress
					which = IR_consumption
				}
				if = {
					limit = { 
						check_variable = { which = IR_pop_progress value = 100 }
						NOT = { 
							check_variable = {
								which = IR_prov_pop
								which = IR_prov_pop_cap
							}
						}					
					}
					add_base_manpower = 1
					set_variable = {
						which = IR_pop_progress
						value = 1
					}
				}
				#if = {
				#	limit = { 
				#		check_variable = { which = IR_pop_progress value = 100 }
				#		NOT = { 
				#			check_variable = {
				#				which = IR_prov_pop_cap
				#				which = IR_prov_pop
				#			}
				#		}					
				#	}
				#	set_variable = {
				#		which = IR_pop_progress
				#		value = 1
				#	}
				#	random_province = { 
				#		limit = { 
				#			NOT = { 
				#				check_variable = {
				#					which = IR_prov_pop
				#					which = IR_prov_pop_cap
				#				}
				#			}
				#			country_or_non_sovereign_subject_holds = ROOT 
							#OR = { 
							#	owner = { is_colonial_nation_of = ROOT } 
							#	is_overseas = yes
							#	NOT = { development = 4 }
							#}
				#		}
				#		add_base_manpower = 1
				#		set_variable = {
				#			which = IR_pop_progress
				#			value = 50
				#		}
				#	}
				#}
				if = {
					limit = { base_manpower = 2 NOT = { check_variable = { which = IR_pop_progress value = 1 } } }
					add_base_manpower = -1
					set_variable = {
						which = IR_pop_progress
						value = 99
					}
					#EVENTUALLY WILL ADD FAMINE EVENTS
				}
			}
			1 = { province_event = { id = IR_development.1 days = 365 } }
		}
	} 
} 

#Population decline (by devastation for now)
province_event = { 
	id = IR_development.2
	title = "IR_development.2.t"
	desc = "IR_development.2.d"
	picture = BATTLE_eventPicture
	
	trigger = {
		always = no
		is_city = yes
		has_global_flag = IR_dev_cap_init
		devastation = 25
		check_variable = {
			which = IR_consumption
			which = IR_food
		}
	}
	
	mean_time_to_happen = {
		months = 180
		#modifier = {
		#	factor = 20
		#	check_variable = {
		#		which = trigger:base_manpower
		#		which = IR_prov_pop_cap
		#	}
		#}
		modifier = {
			factor = 0.9
			devastation = 25
		}
		modifier = {
			factor = 0.9
			devastation = 50
		}
		modifier = {
			factor = 0.9
			devastation = 75
		}
		modifier = {
			factor = 0.5
			devastation = 100
		}
		
		modifier = {
			factor = 1000
			OR = {
				is_prosperous = yes
				NOT = { devastation = 25 }
			}
		}
	
		#modifier = {
		#	factor = 0.9
		#	OR = { trade_goods = grain trade_goods = ir_rice trade_goods = ir_potatoes trade_goods = ir_maize trade_goods = ir_fruit trade_goods = ir_millet trade_goods = livestock trade_goods = fish trade_goods = wine }
		#}
		#modifier = { 
		#	factor = 0.8
		#	OR = { trade_goods = cloth trade_goods = glass trade_goods = salt trade_goods = iron trade_goods = copper trade_goods = paper trade_goods = naval_supplies trade_goods = silk trade_goods = chinaware }
		#}
		#modifier = {
		#	factor = 0.7
		#	OR = { trade_goods = ir_silver trade_goods = gold }
		#}
	}

	hidden = yes

	option = {
		name = "setup.exit" 
		ai_chance = { factor = 100 }
		add_base_manpower = -1
		hidden_effect = {
			if = {
				limit = {
					has_terrain = farmlands
				}
				set_variable = {
					which = IR_food
					value = 10
				}
			}
			else_if = {
				limit = {
					has_terrain = grasslands
				}
				set_variable = {
					which = IR_food
					value = 8
				}
			}
			else_if = {
				limit = {
					OR = {
						has_terrain = drylands
						has_terrain = woods
						has_terrain = jungle
					}
				}
				set_variable = {
					which = IR_food
					value = 6
				}
			}
			else_if = {
				limit = {
					OR = {
						has_terrain = marsh
						has_terrain = steppe
						has_terrain = hills
					}
				}
				set_variable = {
					which = IR_food
					value = 5
				}
			}
			else_if = {
				limit = {
					OR = {
						has_terrain = highlands
						has_terrain = coastline
					}
				}
				set_variable = {
					which = IR_food
					value = 4
				}
			}
			else_if = {
				limit = {
					OR = {
						has_terrain = savannah
						has_terrain = mountain
						has_terrain = forest
					}
				}
				set_variable = {
					which = IR_food
					value = 3
				}
			}
			else_if = {
				limit = {
					OR = {
						has_terrain = coastal_desert
						has_terrain = badlands
						has_terrain = tundra
					}
				}
				set_variable = {
					which = IR_food
					value = 2
				}
			}
			else_if = {
				limit = {
					OR = {
						has_terrain = desert
						has_terrain = glacier
					}
				}
				set_variable = {
					which = IR_food
					value = 1
				}
			}
			set_variable = {
				which = IR_production
    			value = 1
			}
			set_variable = {
				which = IR_consumption
    			value = 1
			}
			set_variable = {
				which = IR_consumption_modifier
    			value = 1
			}
			set_variable = {
				which = IR_prov_wealth
    			value = 1
			}
			set_variable = {
				which = IR_prov_infrastructure
    			value = 1
			}
			set_variable = {
				which = IR_prov_infrastructure_cap
    			value = 5
			}
			set_variable = {
				which = IR_prov_pop
    			value = 1
			}
			set_variable = {
				which = IR_prov_pop_cap
    			value = 1
			}
			#IR_growth_modifier
			export_to_variable = {
        		variable_name = IR_production
        		value = trigger_value:base_production
    		}
			change_variable = { 
				which = IR_production
				which = IR_food
			}
			change_variable = {
				which = IR_production 
				value = trigger_value:province_trade_power 
			}
			#consumption
			export_to_variable = {
    			variable_name = IR_consumption_modifier
    			value = modifier:local_development_cost
    		}
			export_to_variable = {
    			variable_name = IR_consumption
    			value = trigger_value:base_manpower
			}
			change_variable = {
				which = IR_consumption_modifier
				value = 1
			}
			multiply_variable = {
				which = IR_consumption
				which = IR_consumption_modifier
			}
			#infrastructure cap
			if = {
				limit = { has_building = town }
				change_variable = {
					which = IR_prov_infrastructure_cap 
					value = 5
				}
			}
			else_if = {
				limit = { has_building = city }
				change_variable = {
					which = IR_prov_infrastructure_cap 
					value = 15
				}
			}
			else_if = {
				limit = { has_building = metropolis }
				change_variable = {
					which = IR_prov_infrastructure_cap 
					value = 35
				}
			}
			if = {
				limit = { has_building = road }
				change_variable = {
					which = IR_prov_infrastructure_cap 
					value = 5
				}
			}
			else_if = {
				limit = { has_building = railroad }
				change_variable = {
					which = IR_prov_infrastructure_cap 
					value = 10
				}
			}
			#Export to pop cap 
    		export_to_variable = {
        		variable_name = IR_prov_wealth
        		value = trigger_value:base_tax
    		}
			export_to_variable = {
        		variable_name = IR_prov_infrastructure
        		value = trigger_value:base_production
    		}
			export_to_variable = {
        		variable_name = IR_prov_pop
        		value = trigger_value:base_manpower
    		}
			#ADD WEALTH AND INFRASTRUCTURE TO GET CARRYING CAPACITY
			change_variable = {
   				which = IR_prov_pop_cap
   				which = IR_prov_wealth
   			}
			change_variable = {
   				which = IR_prov_pop_cap
   				which = IR_prov_infrastructure
   			}
			subtract_variable = {
   				which = IR_prov_pop_cap
   				value = 1.002
   			}
		}
	} 
} 



