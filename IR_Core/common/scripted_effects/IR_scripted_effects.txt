# IR CUSTOM SCRIPTED EFFECTS
# MISSION REWARDS
control_mission_cede = {
	every_province = {
		limit = { $PROVINCES$ = yes NOT = { country_or_non_sovereign_subject_holds = ROOT } }
		hidden_effect = { 
			if = {
				limit = { owner = { war_with = ROOT } }
				owner = { white_peace = ROOT }
			}
			change_controller = ROOT 
		}
		cede_province = ROOT
	}
}

province_group_cede = {
	every_province = {
		limit = { $PROVINCES$ = yes NOT = { country_or_non_sovereign_subject_holds = ROOT } owned_by = $TAG$ }
		cede_province = ROOT
	}
}

discover_mission_cede = { # NEW CODE
	if = { 
		limit = { $PROVINCE_ID$ = { is_empty = yes } NOT = { has_global_flag = IR_discovery_missions_disabled } }
		hidden_effect = {
			$PROVINCE_ID$ = {
				change_trade_goods = $TRADE_GOOD$
				change_religion = ROOT	
				change_culture = ROOT
				add_territorial_core = ROOT	
			}
		}
		add_treasury = $COST$
		$PROVINCE_ID$ = { 
			cede_province = ROOT 
			add_building = $BUILDING$
		}
	}
	else_if = { 
		limit = { $PROVINCE_ID$ = { is_city = yes NOT = { country_or_non_sovereign_subject_holds = ROOT } } NOT = { has_global_flag = IR_discovery_missions_disabled } }
		if = {
			limit = { 
				$PROVINCE_ID$ = { owner = { is_colonizer_tech_group = no } }
			}
			hidden_effect = {
				$PROVINCE_ID$ = {
					owner = { country_event = { id = orion_seize.1 days = 0 } }
					change_trade_goods = $TRADE_GOOD$
					add_territorial_core = ROOT	
				}	
			}
			add_treasury = $COST$
			$PROVINCE_ID$ = { 
				cede_province = ROOT 
				add_building = $BUILDING$
			}
		}
		else = { #changed from #else_if
		#	limit = { $PROVINCE_ID$ = { owner = { is_colonizer_tech_group = yes } } }
			$PROVINCE_ID$ = { add_permanent_claim = ROOT }
		}
	}
}

colony_mission_cede = {
	add_treasury = $COST$
	custom_tooltip = $TOOLTIP$
	every_province = {
		limit = { $PROVINCES$ = yes NOT = { owned_by = ROOT } }
		if = { 
			limit = { is_empty = yes  NOT = { has_global_flag = IR_colony_missions_disabled } }
			hidden_effect = {
				change_religion = ROOT	
				change_culture = ROOT
				add_territorial_core = ROOT	
				cede_province = ROOT
			}
		}
		else_if = { 
			limit = { is_city = yes NOT = { country_or_non_sovereign_subject_holds = ROOT } NOT = { has_global_flag = IR_colony_missions_disabled } }
			if = {
				limit = { owner = { is_colonizer_tech_group = no } }
				hidden_effect = {
					owner = { country_event = { id = orion_seize.1 days = 0 } }
					add_territorial_core = ROOT		
					cede_province = ROOT 
				}
			}
			else = { add_permanent_claim = ROOT }
		}
	}
}

assign_claim_core = {
	hidden_effect = {
		every_province = {
			limit = {
				$PROVINCES$ = yes
				NOT = { country_or_non_sovereign_subject_holds = ROOT }
                NOT = { is_$TYPE$ = ROOT }
			}
			add_$TYPE$ = ROOT
		}
	}
}

assign_group_trade_goods = {
	#hidden_effect = {
		every_province = {
			limit = { $PROVINCES$ = yes NOT = { trade_goods = $TRADE_GOOD$ } }
			change_trade_goods = $TRADE_GOOD$
		}
	#}
}

assign_group_prov_modifier = {
	tooltip = {
		10034 = {
			add_province_modifier = {
				name = $MODIFIER$
				duration = $DURATION$
			}
		}
	}
	hidden_effect = {
		every_province = {
			limit = {
				$PROVINCES$ = yes
				is_$TYPE$ = yes
				NOT = { has_province_modifier = $MODIFIER$ }
			}
			add_province_modifier = {
				name = $MODIFIER$
				duration = $DURATION$
			}
		}
	}
}

#this does not use the 10034 "Any highlighed province"
assign_group_prov_modifier_alt = {
	#tooltip = {
	#	10034 = {
	#		add_province_modifier = {
	#			name = $MODIFIER$
	#			duration = $DURATION$
	#		}
	#	}
	#}
	#hidden_effect = {
		every_province = {
			limit = {
				$PROVINCES$ = yes
				is_$TYPE$ = yes
				NOT = { has_province_modifier = $MODIFIER$ }
			}
			add_province_modifier = {
				name = $MODIFIER$
				duration = $DURATION$
			}
		}
	#}
}

#COLONY RESERVATIONS WITH MODIFIERS
#this does not use the 10034 
assign_colony_reserve = {
	tooltip = {
		10034 = {
			add_permanent_province_modifier = {
				name = $MODIFIER$
				duration = $DURATION$
			}
		}
	}
	hidden_effect = {
		every_province = {
			limit = {
				$PROVINCES$ = yes
				OR = {
					is_empty = yes
					is_colony = yes
				}
				NOT = { has_province_modifier = $MODIFIER$ }
			}
			add_permanent_province_modifier = {
				name = $MODIFIER$
				duration = $DURATION$
			}
		}
	}
}

assign_colony_reserve_alt = {
	#tooltip = {
	#	10034 = {
	#		add_permanent_province_modifier = {
	#			name = $MODIFIER$
	#			duration = $DURATION$
	#		}
	#	}
	#}
	#hidden_effect = {
		every_province = {
			limit = {
				$PROVINCES$ = yes
				OR = {
					is_empty = yes
					is_colony = yes
				}
				NOT = { has_province_modifier = $MODIFIER$ }
			}
			add_permanent_province_modifier = {
				name = $MODIFIER$
				duration = $DURATION$
			}
		}
	#}
}

# GENERAL EFFECTS
custom_subject = {
	custom_tooltip = $TOOLTIP$
	hidden_effect = {
		every_province = {
			limit = { $PROVINCES$ = yes }
			add_core = $TAG$
			cede_province = $TAG$
		}
		$TAG$ = {
			define_ruler = {
 				name = $LEADER$
   				dynasty = $DYNASTY$
    			adm = $ADM$
    			dip = $DIP$
    			mil = $MIL$
    			age = $AGE$
    			claim = $CLAIM$
    			culture = $CULTURE$
    			religion = $RELIGION$
    			fixed = $FIXED$
    			$GENDER$ = yes
			}
		}
		create_subject = {
			subject_type = $SUBJECT_TYPE$
			subject = $TAG$
		}
	}
}

IR_establish_subject = {
	$CAPITAL$ = {
		add_core = $TAG$
		remove_core = ROOT
	}
	release = $TAG$
	every_province = {
		limit = { $PROVINCES$ = yes }
		if = {
			limit = { owned_by = ROOT }
			if = {
				limit = { is_core = ROOT }
				remove_core = ROOT
				if = {
					limit = { NOT = { is_core = $TAG$ } }
					add_core = $TAG$
				}
			}
			cede_province = $TAG$
		}
		else = {
			add_permanent_claim = $TAG$
		}
	}
	create_subject = {
		subject_type = $SUBJECT_TYPE$
		subject = $TAG$
	}
	hidden_effect = { $TAG$ = { set_government_rank = 1 } }
}

IR_establish_crusader_state = {
	$CAPITAL$ = {
		add_core = $TAG$
		remove_core = ROOT
	}
	release = $TAG$
	every_province = {
		limit = { $PROVINCES$ = yes }
		if = {
			limit = { owned_by = ROOT }
			hidden_effect = {
				if = {
					limit = { is_core = ROOT }
					remove_core = ROOT
					if = {
						limit = { NOT = { is_core = $TAG$ } }
						add_core = $TAG$
					}
				}
			}
			cede_province = $TAG$
		}
		else = { add_permanent_claim = $TAG$ }
	}
	create_subject = {
		subject_type = fief
		subject = $TAG$
	}
	$TAG$ = {
		set_government_rank = $RANK$
		change_government = theocracy
		if = {
			limit = {
				has_dlc = "Dharma"
			}
			add_government_reform = monastic_order_reform
			adopt_reform_progress = ROOT
		}
		else = {
			set_legacy_government = monastic_order_government
		}
		#define_ruler = {}
		hidden_effect = { 
			add_devotion = 100 #Because appparently it's COMPLETELY random. So let's make sure they start at 100.
			if = {
				limit = { NOT = { religion = catholic } }
				change_religion = catholic
			}
		} 
	}	
}

## Tag/subject integrations without gaining their armies/navies
integrate_tag = { # REPLACEMENT
	#custom_tooltip = $TOOLTIP$
	tooltip = { 
		inherit = $TAG$
	}
	hidden_effect = {
		$TAG$ = {
			every_owned_province = {
				add_core = ROOT
				cede_province = ROOT
			}
		}
	}
}

integrate_subject = { #PENDING DELETION ONCE ALL REFERENCES CHANGED TO integrate_tag
	#custom_tooltip = $TOOLTIP$
	tooltip = { 
		inherit = $TAG$
	}
	hidden_effect = {
		$TAG$ = {
			every_owned_province = {
				add_core = ROOT
				cede_province = ROOT
			}
		}
	}
}

#GENERAL SCRIPTED EFFECTS
consolidate_region = {
	custom_tooltip = $TOOLTIP$
	hidden_effect = {
		every_province = {
			limit = { country_or_non_sovereign_subject_holds = ROOT is_city = yes $PROVINCES$ = yes }
			cede_province = ROOT
			add_territorial_core = ROOT
		}
	}
}

develop_region = {
	custom_tooltip = $TOOLTIP$
	hidden_effect = {
		every_province = {
			limit = { $OWNER_TYPE$ = $TAG$ $PROVINCES$ = yes }
			add_base_tax = $TAX$
			add_base_production = $PROD$
			add_base_manpower = $MIL$
		}
	}
}

upgrade_gov_rank = {
	custom_tooltip = $TOOLTIP$
	trigger_switch = {
		on_trigger = government_rank
		4 = { set_government_rank = 5 }
		3 = { set_government_rank = 4 }
		2 = { set_government_rank = 3 }
		1 = { set_government_rank = 2 }
	}
}

#FAMINE & DISEASE WEALTH/POP LOSS
IR_low_wealth_loss = {
	trigger_switch = {
		on_trigger = base_tax
		30 = { add_base_tax = -8 }
		26 = { add_base_tax = -7 }
		22 = { add_base_tax = -6 }
		18 = { add_base_tax = -5 }
		14 = { add_base_tax = -4 }
		10 = { add_base_tax = -3 }
		6 = { add_base_tax = -2 }
		2 = { add_base_tax = -1 }
	}
}

IR_mid_wealth_loss = {
	trigger_switch = {
		on_trigger = base_tax
		30 = { add_base_tax = -15 }
		28 = { add_base_tax = -14 }
		26 = { add_base_tax = -13 }
		24 = { add_base_tax = -12 }
		22 = { add_base_tax = -11 }
		20 = { add_base_tax = -10 }
		18 = { add_base_tax = -9 }
		16 = { add_base_tax = -8 }
		14 = { add_base_tax = -7 }
		12 = { add_base_tax = -6 }
		10 = { add_base_tax = -5 }
		8 = { add_base_tax = -4 }
		6 = { add_base_tax = -3 }
		4 = { add_base_tax = -2 }
		2 = { add_base_tax = -1 }
	}
}

IR_high_wealth_loss = {
	trigger_switch = {
		on_trigger = base_tax
		30 = { add_base_tax = -18 }
		28 = { add_base_tax = -17 }
		26 = { add_base_tax = -16 }
		24 = { add_base_tax = -15 }
		22 = { add_base_tax = -14 }
		20 = { add_base_tax = -13 }
		18 = { add_base_tax = -12 }
		16 = { add_base_tax = -11 }
		14 = { add_base_tax = -10 }
		12 = { add_base_tax = -9 }
		10 = { add_base_tax = -8 }
		8 = { add_base_tax = -7 }	
		6 = { add_base_tax = -5 }
		4 = { add_base_tax = -3 }
		2 = { add_base_tax = -1 }
	}
}

IR_low_pop_loss = {
	trigger_switch = {
		on_trigger = base_manpower
		30 = { add_base_manpower = -8 }
		26 = { add_base_manpower = -7 }
		22 = { add_base_manpower = -6 }
		18 = { add_base_manpower = -5 }
		14 = { add_base_manpower = -4 }
		10 = { add_base_manpower = -3 }
		6 = { add_base_manpower = -2 }
		2 = { add_base_manpower = -1 }
	}
}

IR_mid_pop_loss = {
	trigger_switch = {
		on_trigger = base_manpower
		30 = { add_base_manpower = -15 }
		28 = { add_base_manpower = -14 }
		26 = { add_base_manpower = -13 }
		24 = { add_base_manpower = -12 }
		22 = { add_base_manpower = -11 }
		20 = { add_base_manpower = -10 }
		18 = { add_base_manpower = -9 }
		16 = { add_base_manpower = -8 }
		14 = { add_base_manpower = -7 }
		12 = { add_base_manpower = -6 }
		10 = { add_base_manpower = -5 }
		8 = { add_base_manpower = -4 }
		6 = { add_base_manpower = -3 }
		4 = { add_base_manpower = -2 }
		2 = { add_base_manpower = -1 }
	}
}

IR_high_pop_loss = {
	trigger_switch = {
		on_trigger = base_manpower
		30 = { add_base_manpower = -18 }
		28 = { add_base_manpower = -17 }
		26 = { add_base_manpower = -16 }
		24 = { add_base_manpower = -15 }
		22 = { add_base_manpower = -14 }
		20 = { add_base_manpower = -13 }
		18 = { add_base_manpower = -12 }
		16 = { add_base_manpower = -11 }
		14 = { add_base_manpower = -10 }
		12 = { add_base_manpower = -9 }
		10 = { add_base_manpower = -8 }
		8 = { add_base_manpower = -7 }	
		6 = { add_base_manpower = -5 }
		4 = { add_base_manpower = -3 }
		2 = { add_base_manpower = -1 }
	}
}

# DEVELOPMENT
IR_check_dev_variables = {
	set_variable = { which = IR_wealth_production value = 0 }
	set_variable = { which = IR_pop_production value = 0 }
	set_variable = { which = IR_consumption value = 0 }
	set_variable = { which = IR_prov_pop value = 0 }
	set_variable = { which = IR_prov_pop_cap value = 0 }
	set_variable = { which = IR_prov_infrastructure value = 0 }
	set_variable = { which = IR_prov_infrastructure_cap value = 5 }
	set_variable = { which = IR_prov_famine_chance value = 0 }

	#EXPORT DEV FOR CHECKS
    export_to_variable = {
    	variable_name = IR_consumption
    	value = modifier:local_development_cost
	}
	export_to_variable = {
    	variable_name = IR_prov_infrastructure
		value = trigger_value:base_production
   	}
    export_to_variable = {
    	variable_name = IR_prov_pop
       	value = trigger_value:base_manpower
    }
	#change_variable = {
	#	which = IR_prov_pop_cap
	#	which = IR_prov_infrastructure
	#}
	#export to the wealth/pop growth
	change_variable = {
		which = IR_wealth_production
		which = IR_prov_infrastructure
	}
	change_variable = {
		which = IR_pop_production
		which = IR_prov_infrastructure
	}
	
	#consumption modifier
	change_variable = {
   		which = IR_consumption
   		value = 1
   	}
   	multiply_variable = {
   		which = IR_consumption
   		which = IR_prov_pop
   	}

	#SETTING ALL TO BASE 10/8 to compensate for variable terrain consumption modifiers - AMYZ REMOVED IN LIEU OF LOCALIZED TERRAIN BASED GROWTH
   	#change_variable = { which = IR_wealth_production value = 10 } 
	#change_variable = { which = IR_pop_production value = 8 } 
	
	#TRIGGER SWITCH FOR TRADE GOODS contribution to wealth/pop growth - AMYZ MAY NOT IMPLEMENT- MAY BE OVERKILL CALC
	#trigger_switch = {
   	#	on_trigger = trade_goods
   	#	grain = { 
	#		change_variable = { which = IR_wealth_production value = 2 } 
	#		change_variable = { which = IR_pop_production value = 5 } 
	#	}
	#	wine = { 
	#		change_variable = { which = IR_wealth_production value = 3 } 
	#		change_variable = { which = IR_pop_production value = 2 } 
	#	}
   	#}
	
	
	# TRIGGER SWITCH FOR Terrain contribution to Carrying Capacity & Growth
   	trigger_switch = {
   		on_trigger = has_terrain
   		farmlands = { 
			change_variable = { which = IR_wealth_production value = 7.999 } 
			change_variable = { which = IR_pop_production value = 7.999 } 
			change_variable = { which = IR_prov_pop_cap value = 10 }
		}
   		grasslands = { 
			change_variable = { which = IR_wealth_production value = 6.999 } 
			change_variable = { which = IR_pop_production value = 6.999 } 
			change_variable = { which = IR_prov_pop_cap value = 8 }
		}
   		drylands = { 
			change_variable = { which = IR_wealth_production value = 5.999 } 
			change_variable = { which = IR_pop_production value = 5.999 } 
			change_variable = { which = IR_prov_pop_cap value = 7 }
		}
   		woods = { 
			change_variable = { which = IR_wealth_production value = 4.999 } 
			change_variable = { which = IR_pop_production value = 4.999 } 
			change_variable = { which = IR_prov_pop_cap value = 7 }
		}
   		jungle = { 
			change_variable = { which = IR_wealth_production value = 3.999 } 
			change_variable = { which = IR_pop_production value = 4.999 } 
			change_variable = { which = IR_prov_pop_cap value = 6 } 
		}
   		marsh = { 
			change_variable = { which = IR_wealth_production value = 4.999 } 
			change_variable = { which = IR_pop_production value = 3.999 } 
			change_variable = { which = IR_prov_pop_cap value = 6 }
		}
   		hills = { 
			change_variable = { which = IR_wealth_production value = 3.999 } 
			change_variable = { which = IR_pop_production value = 4.999 } 
			change_variable = { which = IR_prov_pop_cap value = 6 }
		}
   		coastline = { 
			change_variable = { which = IR_wealth_production value = 4.999 } 
			change_variable = { which = IR_pop_production value = 2.999 } 
			change_variable = { which = IR_prov_pop_cap value = 5 }
		}
		steppe = { 
			change_variable = { which = IR_wealth_production value = 2.999 } 
			change_variable = { which = IR_pop_production value = 4.999 } 
			change_variable = { which = IR_prov_pop_cap value = 5 }
		}
		highlands = { 
			change_variable = { which = IR_wealth_production value = 2.999 } 
			change_variable = { which = IR_pop_production value = 3.999 } 
			change_variable = { which = IR_prov_pop_cap value = 5 }
		}
   		savannah = { 
			change_variable = { which = IR_wealth_production value = 2.999 } 
			change_variable = { which = IR_pop_production value = 2.999 } 
			change_variable = { which = IR_prov_pop_cap value = 5 }
		}
   		mountain = { 
			change_variable = { which = IR_wealth_production value = 2.999 } 
			change_variable = { which = IR_pop_production value = 1.999 } 
			change_variable = { which = IR_prov_pop_cap value = 5 } 
		}
   		forest = { 
			change_variable = { which = IR_wealth_production value = 1.999 } 
			change_variable = { which = IR_pop_production value = 2.999 } 
			change_variable = { which = IR_prov_pop_cap value = 4 }
		}
   		coastal_desert = { 
			change_variable = { which = IR_wealth_production value = 3.999 } 
			change_variable = { which = IR_pop_production value = 1.999 } 
			change_variable = { which = IR_prov_pop_cap value = 4 }
		}
   		badlands = { 
			change_variable = { which = IR_wealth_production value = 1.999 } 
			change_variable = { which = IR_pop_production value = 1.999 } 
			change_variable = { which = IR_prov_pop_cap value = 3 }
		}
   		tundra = { 
			change_variable = { which = IR_wealth_production value = 1.999 } 
			change_variable = { which = IR_pop_production value = 0.999 } 
			change_variable = { which = IR_prov_pop_cap value = 2 }
		}
   		desert = { 
			change_variable = { which = IR_wealth_production value = 2.999 } 
			change_variable = { which = IR_pop_production value = 0.999 } 
			change_variable = { which = IR_prov_pop_cap value = 2 }
		}
   		glacier = { 
			change_variable = { which = IR_wealth_production value = 0.999 } 
			change_variable = { which = IR_pop_production value = 0.999 } 
			change_variable = { which = IR_prov_pop_cap value = 1 }
		}
   	}
	#ADD WEALTH AND INFRASTRUCTURE TO GET CARRYING CAPACITY
	if = {  #SET TO 1 IF BELOW
		limit = {
			NOT = { check_variable = { which = IR_prov_pop_cap value = 1 } }
		}
		set_variable = {
			which = IR_prov_pop_cap
			value = 1
		}
	}
	
	
	#famine %
	change_variable = {
   		which = IR_prov_famine_chance
   		which = IR_consumption
   	}
	subtract_variable = {
   		which = IR_prov_famine_chance
   		which = IR_pop_production
   	}
	multiply_variable = {
   		which = IR_prov_famine_chance
   		value = 10
   	}
	change_variable = {
   		which = IR_prov_famine_chance
   		which = IR_prov_pop
   	}
	subtract_variable = {
   		which = IR_prov_famine_chance
   		which = IR_prov_pop_cap
   	}
	
	if = {  #SET TO 0 IF BELOW 1
		limit = {
			NOT = { check_variable = { which = IR_prov_famine_chance value = 1 } }
		}
		set_variable = {
			which = IR_prov_famine_chance
			value = 0
		}
	}
	else_if = {  #SET TO 100 IF above 100.01
		limit = {
			check_variable = { which = IR_prov_famine_chance value = 100.01 }
		}
		set_variable = {
			which = IR_prov_famine_chance
			value = 100
		}
	}
	
    ### 
	#infrastructure cap
	trigger_switch = { 
		on_trigger = has_building
		town = { 
			change_variable = {
				which = IR_prov_infrastructure_cap 
				value = 5
			}
		}
		city = {
			change_variable = {
				which = IR_prov_infrastructure_cap 
				value = 15
			}
		} 
		metropolis = { 
			change_variable = {
				which = IR_prov_infrastructure_cap 
				value = 35
			}
		}
	}
	trigger_switch = {
		on_trigger = has_building
		road = {
			change_variable = {
				which = IR_prov_infrastructure_cap 
				value = 5
			}
		} 
		railroad= {
			change_variable = {
				which = IR_prov_infrastructure_cap 
				value = 10
			}
		} 
	}
}

IR_dev_calc = {
	#IR_check_dev_variables = yes
	change_variable = {
		which = IR_pop_progress
		which = IR_pop_production
	}
	subtract_variable = {
		which = IR_pop_progress
		which = IR_consumption
	}
	change_variable = {
		which = IR_wealth_progress
		which = IR_wealth_production
	}
	subtract_variable = {
		which = IR_wealth_progress
		which = IR_consumption
	}
		
	#WEALTH CALC
	if = {
		limit = { 
			check_variable = { which = IR_wealth_progress value = 100 }
		}
		add_base_tax = 1
		set_variable = {
			which = IR_wealth_progress
			value = 1
		}
		#random = { #READD WITH CHECK FOR INFRASTRUCTURE < INFRASTRUCTURE_CAP
		#	chance = 20
		#	add_base_production = 1
		#}
	}
	else_if = { # lose wealth
		limit = { base_tax = 2 NOT = { check_variable = { which = IR_wealth_progress value = 1 } } }
		set_variable = {
			which = IR_wealth_progress
			value = 99
		}
		add_base_tax = -1
	}
	else_if = { # lose wealth RARE CHANCE TO IMPROVE INFRASTRUCTURE - HARDSHIP BREEDS INNOVATION
		limit = { base_tax = 1 NOT = { base_tax = 2 } NOT = { check_variable = { which = IR_wealth_progress value = 1 } } }
		set_variable = {
			which = IR_wealth_progress
			value = 99
		}
		random = { 
			chance = 5 
			add_base_production = 1
		}
	}
	#POP CALC
	if = {
		limit = { 
			check_variable = { which = IR_pop_progress value = 100 }
			#check_variable = {
			#	which = IR_prov_pop_cap
			#	which = IR_prov_pop
			#}	
		}
		add_base_manpower = 1
		set_variable = {
			which = IR_pop_progress
			value = 1
		}
		#if = { 
		#	limit = { OR = { has_province_modifier = famine_1 has_province_modifier = famine_2 } }
		#	province_event = { id = famine.2 days = 0 } # REPLACES FAMINE TO LINGERING OR FADING - MUST HAVE FAMINE IN PROVINCE AND POSITIVE GROWTH - OTHERWISE FAMINE WILL BECOME MORE EXTREME AS YOU LOSE GROWTH PROGRESS
		#}
	}
	#else_if = { #IF YOU GROW AT POP CAP 
	#	if = {
	#		limit = { 
	#			check_variable = { which = IR_pop_progress value = 100 }
	#			NOT = { 
	#				check_variable = {
	#					which = IR_prov_pop_cap
	#					which = IR_prov_pop
	#				}	
	#			}
	#		}
	#	}
	#	set_variable = {
	#		which = IR_pop_progress
	#		value = 1
	#	}
	#	random = { 
	#		chance = 25 
	#		add_base_production = 1
	#	}
	#}
	else_if = { # Normal negative pop growth
		limit = { base_manpower = 2 NOT = { check_variable = { which = IR_pop_progress value = 1 } } }
		add_base_manpower = -1
		set_variable = {
			which = IR_pop_progress
			value = 99
		}
		#province_event = { id = famine.1 days = 0 } 
	}
	else_if = { # RARE CHANCE TO IMPROVE INFRASTRUCTURE IF AT 1 POP - HARDSHIP BREEDS INNOVATION
		limit = { base_manpower = 1 NOT = { base_manpower = 2 } NOT = { check_variable = { which = IR_pop_progress value = 1 } } }
		set_variable = {
			which = IR_pop_progress
			value = 99
		}
		random = { 
			chance = 5 
			add_base_production = 1
		}
	}
	IR_check_famine = yes
}

#subjects
IR_check_subj_variables = {
	set_variable = { which = IR_subj_opinion value = 0 }
	set_variable = { which = IR_subj_cohesion_growth value = 0 }

	#if = { 
	#	limit = { NOT = { overlord = { has_country_flag = overlord_of_@PREV }}}
	#	every_known_country = { clr_country_flag = overlord_of_@PREV }	#clear previous overlord if changed hands in peace
	#	overlord = { set_country_flag = overlord_of_@PREV }
	#}
	
	#EXPORT OPINION AND TRUST
	export_to_variable = {
        variable_name = IR_subj_opinion
	    value = opinion
		#who = ROOT
		with = overlord
   	}
	export_to_variable = {
        variable_name = IR_subj_cohesion_growth
	    value = trust
		#who = ROOT
		with = overlord
   	}
	#MODIFIER OPINION AND TRUST FOR COHESION GROWTH
	divide_variable = {
		which = IR_subj_opinion
		value = 100
	}
	subtract_variable = {
		which = IR_subj_cohesion_growth
		value = 50
	}
	divide_variable = {
		which = IR_subj_cohesion_growth
		value = 5
	}
	change_variable = {
		which = IR_subj_cohesion_growth
		which = IR_subj_opinion
	}
}

IR_subj_calc = {
	change_variable = {
		which = IR_subj_cohesion
		which = IR_subj_cohesion_growth
	}
	if = {
		limit = { check_variable = { which = IR_subj_cohesion value = 100.01 } }
		set_variable = {
			which = IR_subj_cohesion
			value = 100
		}
	}
}

#UNUSED CURRENTLY
discover_region = {
	custom_tooltip = $TOOLTIP$
	hidden_effect = {
		$PROVINCES$ = {
			discover_country = ROOT
		}
	}
}

discover_province_group = {
	every_province = {
		limit = { $PROVINCES$ = yes NOT = { has_discovered = ROOT } }
		discover_province = ROOT
	}	
}

set_kingdom_rank = {
	custom_tooltip = $TOOLTIP$
	hidden_effect = {
		if = { limit = { NOT = { government_rank = 4 } } set_government_rank = 4 }
	}
}

set_empire_rank = {
	custom_tooltip = $TOOLTIP$
	hidden_effect = {
		if = { limit = { NOT = { government_rank = 5 } } set_government_rank = 5 }
	}
}