# Hard-coded functions made fully or partly scripted
#
# Note that most functions use unique mechanics

# ROOT = country
can_join_hre_league = {
	condition = {
		tooltip = "CANNOT_JOIN_LEAGUE_AT_WAR"
		potential = {
		}
		allow = {
			is_at_war = no
		}
	}
}

can_leave_hre_league = {
}

can_harsh_treatment = {
}

can_reduce_war_exhaustion = {
}

can_reduce_inflation = {
}

can_declare_bankruptcy = {
}

can_release_colonial_nation = {
	condition = {
		tooltip = "CAN_RELEASE_CN_WE_ARE_AT_WAR"
		potential = {
		}
		allow = {
			is_at_war = no
		}
	}
}

can_claim_defender_of_faith = {
}

can_change_national_focus = {
}

can_increase_stability = {
}

# ROOT = province, FROM = country
can_add_province_to_hre = {
	
}

can_remove_province_from_hre = {
	

}

can_increase_autonomy = {
}

can_decrease_autonomy = {
}

can_make_core = {
}

can_make_state = {
	condition = {
		tooltip = "BYZ_NO_EXARCH_IN_REGION"
		potential = {
			owner = {
				has_country_modifier = the_exarch_system
			}
		}
		allow = {
			NOT = {
				any_province = {
					region = PREV
					owner = {
						capital_scope = {
							region = ROOT
						}
						is_exarch_tag_and_exarch_of_root_trigger = yes
					}
				}
			}
		}
	}
}

can_abandon_state = {
}

can_improve_tax = {
	condition = {
		tooltip = "IR_NO_SUBJECT_CENSUS"
		potential = {
    		owner = { is_subject = yes overlord = { ai = no } }
		}
		#if yes to above, then always disallow
		allow = { always = no }
	}
	condition = {
		tooltip = "IR_NO_ADM_PP"
		potential = {
			adm_power = 25
    		if = { 
				limit = { development = 1 NOT = { development = 11 } }
				NOT = { owner = { treasury = 25 } }
			}
			if = { 
				limit = { development = 11 NOT = { development = 21 } }
				NOT = { owner = { treasury = 50 } }
			}
			if = { 
				limit = { development = 21 NOT = { development = 31 } }
				NOT = { owner = { treasury = 75 } }
			}
			if = { 
				limit = { development = 31 NOT = { development = 41 } }
				NOT = { owner = { treasury = 100 } }
			}
			if = { 
				limit = { development = 41 NOT = { development = 51 } }
				NOT = { owner = { treasury = 125 } }
			}
			if = { 
				limit = { development = 51 }
				NOT = { owner = { treasury = 150 } }
			}
		}
		#if yes to above, then always disallow
		allow = { always = no }
	}
}

can_improve_production = {
	condition = {
		tooltip = "IR_DEV_CAPPED"
		potential = {
			#check that dev >= dev_cap
    		check_variable = {
        		which = IR_prov_infrastructure
        		which = IR_prov_infrastructure_cap
    		}
		}
		#if yes to above, then always disallow
		allow = { always = no }
	}
	condition = {
		tooltip = "IR_NO_SUBJECT_CENSUS"
		potential = {
    		owner = { is_subject = yes overlord = { ai = no } }
		}
		#if yes to above, then always disallow
		allow = { always = no }
	}
	condition = {
		tooltip = "IR_NO_DIP_PP"
		potential = {
			dip_power = 25
			mil_power = 25
    		if = { 
				limit = { development = 1 NOT = { development = 11 } }
				NOT = { owner = { treasury = 50 } }
			}
			if = { 
				limit = { development = 11 NOT = { development = 21 } }
				NOT = { owner = { treasury = 100 } }
			}
			if = { 
				limit = { development = 21 NOT = { development = 31 } }
				NOT = { owner = { treasury = 150 } }
			}
			if = { 
				limit = { development = 31 NOT = { development = 41 } }
				NOT = { owner = { treasury = 200 } }
			}
			if = { 
				limit = { development = 41 NOT = { development = 51 } }
				NOT = { owner = { treasury = 250 } }
			}
			if = { 
				limit = { development = 51 }
				NOT = { owner = { treasury = 300 } }
			}
		}
		#if yes to above, then always disallow
		allow = { always = no }
	}
}

can_improve_manpower = {
	condition = {
		tooltip = "IR_NO_SUBJECT_CENSUS"
		potential = {
    		owner = { is_subject = yes overlord = { ai = no } }
		}
		#if yes to above, then always disallow
		allow = { always = no }
	}
}

can_exploit_tax = {
}

can_exploit_production = {
    condition = {
        tooltip = "IR_WpGp"
        potential = {
			check_variable = {
				which = IR_wealth_production
				which = IR_consumption
			}
			check_variable = {
				which = IR_pop_production
				which = IR_consumption
			}
			NOT = { 
				check_variable = {
					which = IR_prov_famine_chance
					value = 1
				}
			}
        }
        allow = { always = no }
    }
    condition = {
        tooltip = "IR_WmGp"
        potential = {
			check_variable = {
				which = IR_consumption
				which = IR_wealth_production
			}
			check_variable = {
				which = IR_pop_production
				which = IR_consumption
			}
			NOT = { 
				check_variable = {
					which = IR_prov_famine_chance
					value = 1
				}
			}
        }
        allow = { always = no }
    }
    condition = {
        tooltip = "IR_WpGm"
        potential = {
			check_variable = {
				which = IR_wealth_production
				which = IR_consumption
			}
			check_variable = {
				which = IR_consumption
				which = IR_pop_production
			}
			NOT = { 
				check_variable = {
					which = IR_prov_famine_chance
					value = 1
				}
			}
        }
        allow = { always = no }
    }
    condition = {
        tooltip = "IR_WmGm"
        potential = {
			check_variable = {
				which = IR_consumption
				which = IR_wealth_production
			}
			check_variable = {
				which = IR_consumption
				which = IR_pop_production
			}
			NOT = { 
				check_variable = {
					which = IR_prov_famine_chance
					value = 1
				}
			}
        }
        allow = { always = no }
   }
   condition = {
        tooltip = "IR_WpGpF"
        potential = {
			check_variable = {
				which = IR_wealth_production
				which = IR_consumption
			}
			check_variable = {
				which = IR_pop_production
				which = IR_consumption
			}
			check_variable = {
				which = IR_prov_famine_chance
				value = 1
			}
        }
        allow = { always = no }
    }
    condition = {
        tooltip = "IR_WmGpF"
        potential = {
			check_variable = {
				which = IR_consumption
				which = IR_wealth_production
			}
			check_variable = {
				which = IR_pop_production
				which = IR_consumption
			}
			check_variable = {
				which = IR_prov_famine_chance
				value = 1
			}
        }
        allow = { always = no }
    }
    condition = {
        tooltip = "IR_WpGmF"
         potential = {
			check_variable = {
				which = IR_wealth_production
				which = IR_consumption
			}
			check_variable = {
				which = IR_consumption
				which = IR_pop_production
			}
			check_variable = {
				which = IR_prov_famine_chance
				value = 1
			}
        }
        allow = { always = no }
    }
    condition = {
        tooltip = "IR_WmGmF"
        potential = {
			check_variable = {
				which = IR_consumption
				which = IR_wealth_production
			}
			check_variable = {
				which = IR_consumption
				which = IR_pop_production
			}
			check_variable = {
				which = IR_prov_famine_chance
				value = 1
			}
        }
        allow = { always = no }
   }
}

can_exploit_manpower = {
	condition = {
		tooltip = "IR_POPULATION" 
		potential = {
		}
		#if yes to above, then always disallow
		allow = { always = no }
	}
}

can_change_culture = {
}

can_move_capital = {
}

can_move_trade_port = {
}

can_order_assault = {
}

can_order_force_march = {
}

can_scorch_earth = {
}

can_garrison_sorties = {
}

can_seize_colony = {
}

can_burn_colony = {
}

can_colonize_province = {
	condition = {
		tooltip = "IR_COLONIAL_BORDER_LIMIT"
		potential = {
			FROM = {
				is_colonial_nation = yes
			}
		}
		allow = {
			FROM = {
				capital_scope = {
					colonial_region = ROOT
				}
			}
		}
	}
	condition = {
		tooltip = "IR_SOFT_WASTELAND_1"
		potential = {
			IR_soft_wasteland_1_provinces = yes
			current_age = age_of_discovery
			NOT = { OR = {
				is_permanent_claim = FROM # test to simplify exceptions with permaclaim
				has_province_modifier = por_colony
				has_province_modifier = spa_colony
				has_province_modifier = fra_colony
				has_province_modifier = eng_colony
				has_province_modifier = ned_colony
				has_province_modifier = dan_colony
				has_province_modifier = swe_colony
				#planned  
				#has_province_modifier = sco_colony 
				#has_province_modifier = rus_colony
				#has_province_modifier = pru_colony
				#has_province_modifier = pol_colony
				#has_province_modifier = hab_colony
				#has_province_modifier = fla_colony
				#has_province_modifier = kur_colony
				#has_province_modifier = tur_colony
			} }
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "IR_SOFT_WASTELAND_2"
		potential = {
			IR_soft_wasteland_2_provinces = yes
			OR = { current_age = age_of_discovery current_age = age_of_reformation }
			NOT = { OR = { 
				FROM = { technology_group = exiled }
				is_permanent_claim = FROM # test to simplify exceptions with permaclaim
				has_province_modifier = por_colony
				has_province_modifier = spa_colony
				has_province_modifier = fra_colony
				has_province_modifier = eng_colony
				has_province_modifier = ned_colony
				has_province_modifier = dan_colony
				has_province_modifier = swe_colony
			} }
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "IR_SOFT_WASTELAND_3"
		potential = {
			IR_soft_wasteland_3_provinces = yes
			OR = { current_age = age_of_discovery current_age = age_of_reformation current_age = age_of_absolutism }
			NOT = { OR = { 
				FROM = { technology_group = exiled }
				is_permanent_claim = FROM # test to simplify exceptions with permaclaim
				has_province_modifier = por_colony
				has_province_modifier = spa_colony
				has_province_modifier = fra_colony
				has_province_modifier = eng_colony
				has_province_modifier = ned_colony
				has_province_modifier = dan_colony
				has_province_modifier = swe_colony
			} }
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "IR_SOFT_WASTELAND_1"
		potential = {
			IR_soft_wasteland_1_provinces = yes
			current_age = age_of_discovery
			has_province_modifier = por_age
			FROM = {
				NOT = { 
					OR = { 
						tag = POR 
						tag = LSA 
						tag = IBE 
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "IR_SOFT_WASTELAND_2"
		potential = {
			IR_soft_wasteland_2_provinces = yes
			OR = { current_age = age_of_discovery current_age = age_of_reformation }
			has_province_modifier = por_age
			FROM = {
				NOT = { 
					OR = { 
						tag = POR 
						tag = LSA 
						tag = IBE 
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "IR_SOFT_WASTELAND_3"
		potential = {
			IR_soft_wasteland_3_provinces = yes
			OR = { current_age = age_of_discovery current_age = age_of_reformation current_age = age_of_absolutism }
			has_province_modifier = por_age
			FROM = {
				NOT = { 
					OR = { 
						tag = POR 
						tag = LSA 
						tag = IBE 
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_POR"
		potential = {
			has_province_modifier = por_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = POR 
						tag = LSA 
						tag = IBE 
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_SPA"
		potential = {
			has_province_modifier = spa_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = SPA
						tag = CAS
						tag = ARA
						tag = NAV
						tag = LON
						tag = IBE 
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_FRA"
		potential = {
			has_province_modifier = fra_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = FRA
						tag = PRO
						tag = BRI
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_ENG"
		potential = {
			has_province_modifier = eng_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = ENG
						tag = GBR
						tag = UNK
						tag = SCO
						tag = AGV
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_NED"
		potential = {
			has_province_modifier = ned_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = NED
						tag = FLA
						tag = BRB
						tag = HOL
						tag = UTR
						tag = GEL
						tag = FRI
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_DAN"
		potential = {
			has_province_modifier = dan_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = DAN
						tag = NOR
						tag = ICE
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_SWE"
		potential = {
			has_province_modifier = swe_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = SWE
						tag = FIN
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "IR_NO_SETTLEMENTS"
		potential = {
			is_city = yes
		}
		allow = {
			always = no
		}
	}
}

can_colonize_province_siberian_frontier = {
	condition = {
		tooltip = "IR_SOFT_WASTELAND_1"
		potential = {
			IR_soft_wasteland_1_provinces = yes
			current_age = age_of_discovery
			NOT = { OR = { 
				FROM = { technology_group = exiled }
				is_permanent_claim = FROM # test to simplify exceptions with permaclaim
				has_province_modifier = por_colony 
				has_province_modifier = spa_colony
				has_province_modifier = fra_colony
				has_province_modifier = eng_colony
				has_province_modifier = ned_colony
				has_province_modifier = dan_colony
				has_province_modifier = swe_colony
			} }
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "IR_SOFT_WASTELAND_2"
		potential = {
			IR_soft_wasteland_2_provinces = yes
			OR = { current_age = age_of_discovery current_age = age_of_reformation }
			NOT = { OR = { 
				FROM = { technology_group = exiled }
				is_permanent_claim = FROM # test to simplify exceptions with permaclaim
				has_province_modifier = por_colony 
				has_province_modifier = spa_colony
				has_province_modifier = fra_colony
				has_province_modifier = eng_colony
				has_province_modifier = ned_colony
				has_province_modifier = dan_colony
				has_province_modifier = swe_colony
			} }
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "IR_SOFT_WASTELAND_3"
		potential = {
			IR_soft_wasteland_3_provinces = yes
			OR = { current_age = age_of_discovery current_age = age_of_reformation current_age = age_of_absolutism }
			NOT = { OR = { 
				FROM = { technology_group = exiled }
				is_permanent_claim = FROM # test to simplify exceptions with permaclaim
				has_province_modifier = por_colony 
				has_province_modifier = spa_colony
				has_province_modifier = fra_colony
				has_province_modifier = eng_colony
				has_province_modifier = ned_colony
				has_province_modifier = dan_colony
				has_province_modifier = swe_colony
			} }
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_POR"
		potential = {
			has_province_modifier = por_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = POR 
						tag = LSA 
						tag = IBE 
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_SPA"
		potential = {
			has_province_modifier = spa_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = SPA
						tag = CAS
						tag = ARA
						tag = NAV
						tag = LON
						tag = IBE 
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_FRA"
		potential = {
			has_province_modifier = fra_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = FRA
						tag = PRO
						tag = BRI
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_ENG"
		potential = {
			has_province_modifier = eng_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = ENG
						tag = GBR
						tag = UNK
						tag = SCO
						tag = AGV
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_NED"
		potential = {
			has_province_modifier = ned_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = NED
						tag = FLA
						tag = BRB
						tag = HOL
						tag = UTR
						tag = GEL
						tag = FRI
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_DAN"
		potential = {
			has_province_modifier = dan_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = DAN
						tag = NOR
						tag = ICE
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
	condition = {
		tooltip = "COL_REGION_LOCK_SWE"
		potential = {
			has_province_modifier = swe_colony
			FROM = {
				NOT = { 
					OR = { 
						tag = SWE
						tag = FIN
					} 
				} 
			}
		}
		allow = {
			always = no
		}
	}
}

can_add_seat_in_parliament = {
}

can_add_estate = {
}

can_expel_minority_from = {
	condition = {
		potential = {
			OR = {
				is_religious_center_province = yes
				is_reformation_center = yes
			}
			
		}
		allow = {
			always = no
		}
	}
	#DISABLING EXPEL MINORITY
	condition = {
		potential = {
			is_city = yes
		}
		allow = {
			always = no
		}
	}
}

#hardcoded: has a colonial parent or is in the same colonial region as the capital
can_have_colonial_nations = {
	condition = {
		potential = {
			FROM = {
				has_country_flag = no_colonial_nations
			}
		}
		allow = {
			always = no
		}
	}
}

### Special functions

# Called by can_add_province_to_hre
is_possible_hre_province = {
	condition = {
		tooltip = "APH_ONLY_EUROPE"
		potential = {
		}
		allow = {
			continent = europe
		}
	}
	#condition = {
	#	tooltip = "IR_CULTURE"
	#	potential = {
	#	}
	#	allow = {
	#		culture_group = german
	#	}
	#}
}

will_demand_annexation = {
	condition = {
		potential = {
			is_elector = yes
		}
		allow = {
			NOT = { hre_reform_passed = landfriede }
		}
	}
}